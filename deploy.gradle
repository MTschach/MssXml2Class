apply plugin: 'maven'
apply plugin: 'maven-publish'

apply plugin: 'com.jfrog.bintray'

def artifact = new Properties()
artifact.load(new FileInputStream("${project.projectDir}${File.separator}deploy.settings"))

group=artifact.groupId

install {
    repositories.mavenInstaller {
    pom.project {
            packaging 'aar'
            groupId artifact.groupId
            artifactId artifact.artifactId
            version artifact.version
            name artifact.artifactId // pom.project.name must be same as bintray.pkg.name
            inceptionYear '2015' // HARDCODED
            licenses {
                license { // HARDCODED
                    name 'Apache 2'
                    url 'https://www.gnu.org/licenses/gpl.txt'
                    distribution 'repo'
                }
            }
            scm {
                    connection artifact.gitUrl
                    developerConnection artifact.gitUrl
                    url artifact.siteUrl
            }
        }
    }
}


def pomConfig = {
	licenses {
		license {
			name "The Apache Software License, Version 2.0"
			url "http://www.apache.org/licenses/LICENSE-2.0.txt"
			distribution "repo"
		}
	}
	
	developers {
		developer {
			id "mtschach"
			name "Michael Tschach"
			email "MichaelTschach@gmx.net"
		}
	}
	
	scm {
		url artifact.gitUrl
	}
}

Properties properties = new Properties()
File propFile = "${System.properties['user.home']}${File.separator}.gradle${File.separator}bintray.properties" as File
properties.load(propFile.newDataInputStream())

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            groupId artifact.groupId
            artifactId artifact.artifactId
            version artifact.version
            
            pom.withXml {
            	def root = asNode()
            	root.appendNode('description', 'useful tools and utilities')
            	root.appendNode('name', artifact.artifactId)
            	root.appendNode('url', artifact.gitUrl)
            	root.children().last() + pomConfig
				}
        }
    }
}

bintray {
	user = properties.getProperty("bintray.user")
	key = properties.getProperty("bintray.apikey")
    
    publications = ['MyPublication']

    configurations = ['archives']
    pkg {
        repo = artifact.groupId
        name = artifact.artifactId
        desc = artifact.artifactId + ' V'+artifact.version
        vcsUrl = artifact.gitUrl
        licenses = ['Apache-2.0']
        publish = true
        publicDownloadNumbers = true
        version {
            name = artifact.version
            desc = artifact.artifactId+' V'+artifact.version
            released = new Date()
        }
    }
}

task sourcesJar(type: Jar) {
    //from android.sourceSets.main.java.srcDirs
    from sourceSets.main.allSource
    classifier = 'sources'
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
