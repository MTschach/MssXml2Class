/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// Apply the application plugin to add support for building an application
apply plugin: 'application'

def artifact = new Properties()
artifact.load(new FileInputStream("${project.projectDir}${File.separator}deploy.settings"))

version = artifact.version

// In this section you declare where to find the dependencies of your project
buildscript {
    repositories {
        jcenter()
        google()
    }
   dependencies {
      classpath 'com.android.tools.build:gradle:3.2.1'
      classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
      classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:latest.release'
    }
}

apply from: 'https://raw.githubusercontent.com/MTschach/MssUtils/master/artifactory.gradle'


configurations {
   mainCompile
   testCompile.extendsFrom mainCompile
}

sourceSets {
    main {
        java {
            srcDirs "src"
        }
        resources {
            srcDirs "resources"
        }
    }
    
    test {
        java {
            srcDirs "test"
        }
    }
}

dependencies {
   compile 'org.apache.logging.log4j:log4j-core:latest.release'
   compile 'org.apache.logging.log4j:log4j-api:latest.release'
   compile 'org.apache.logging.log4j:log4j-slf4j-impl:latest.release'
   compile 'Mss:MssUtils:latest.release'
   compile 'Mss:MssConfigTools:latest.release'
   
   compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
   

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
}

task customFatJar(type: Jar) {
   manifest {
      attributes "Main-Class": "de.mss.xml2class.Xml2Class"
   }
   baseName = 'all-in-on-jar' 
   from {
      configuration.compile.collect { it.isDirectory() ? it : zipTree(it) }
   }
   with jar
}


jar {
   manifest {
      attributes(
         'Class-Path': configurations.compileClasspath.files.collect {"$it.name"}.join(' '),
         'Main-Class': 'de.mss.xml2class.Xml2Class'
      )
   }
}


// Define the main class for the application
mainClassName = 'de.mss.xml2class.Xml2Class'

apply from: 'https://raw.githubusercontent.com/MTschach/MssUtils/master/deploy.gradle'
