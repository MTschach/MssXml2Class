package {PACKAGE_NAME};

public class {CLASS_NAME}{BASE_CLASS}
{HAS_NO_INTERFACE}   implements de.mss.utils.logging.Logable {
{HAS_INTERFACE}   {INTERFACE}, de.mss.utils.logging.Logable {
   {VERSION}

{CONSTANTS_START}
   /** {COMMENT} */
   private static final {FIELD_TYPE} {FIELD_NAME_WITH_VALUE};
   {CONSTANTS_END}
{VARIABLES_START}
   /** {COMMENT} */
   private {FIELD_TYPE} {FIELD_NAME_WITH_VALUE};
   {VARIABLES_END}
   public {CLASS_NAME} () {
{HAS_BASECLASS}      super();
{HAS_NO_BASECLASS}      // nothing to do here
   }
   
{GETTER_START}
   public {FIELD_TYPE} get{METHOD_NAME} () { return this.{FIELD_NAME}; }
   {GETTER_END}
{SETTER_START}
   public void set{METHOD_NAME} ({FIELD_TYPE} v) { this.{FIELD_NAME} = v; }
   {SETTER_END}

   @Override
   public java.util.Map<String,String> doLogging() {
      java.util.Map<String, String> ret = new java.util.HashMap<>();
{TO_STRING_START}      ret = de.mss.utils.logging.LoggingUtil.addLogging("{PRINT_NAME}", this.{FIELD_NAME}, ret);{TO_STRING_END}
{HAS_BASECLASS}      ret.putAll(super.doLogging());
      return ret;
   }

   @Override
   public String toString() {
      return de.mss.utils.logging.LoggingUtil.getLogString(doLogging());
   }
   
{PRINT_METHODS_START}
{METHOD}{PRINT_METHODS_END}
{SPECIAL_METHODS_START}
   {METHOD}{SPECIAL_METHODS_END}
}
