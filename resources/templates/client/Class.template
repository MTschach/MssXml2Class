package {PACKAGE_NAME};

public class {CLASS_NAME}
{HAS_BASECLASS}   {BASE_CLASS}
{HAS_NO_BASECLASS}   extends de.mss.net.webservice.CheckRequiredFields
{HAS_NO_INTERFACE}   implements de.mss.net.webservice.IfCheckRequiredFields, de.mss.utils.logging.Logable {
{HAS_INTERFACE}   {INTERFACE}, de.mss.net.webservice.IfCheckRequiredFields, de.mss.utils.logging.Logable {
   {VERSION}
{CONSTANTS_START}
   /** {COMMENT} */
   public static final {FIELD_TYPE} {FIELD_NAME_WITH_VALUE};
   
{CONSTANTS_END}
{VARIABLES_START}
   /** {COMMENT} */
   {ANNOTATION}
   private {FIELD_TYPE} {FIELD_NAME_WITH_VALUE};
{VARIABLES_END}
   public {CLASS_NAME} () {
{HAS_BASECLASS}      super();
{HAS_NO_BASECLASS}      // nothing to do here
   }
   
{GETTER_START}
   {OVERRIDES}
   public {FIELD_TYPE} get{METHOD_NAME} () { return this.{FIELD_NAME}; }{GETTER_END}
{SETTER_START}
   {OVERRIDES}
   public void set{METHOD_NAME} ({FIELD_TYPE} v) {THROWS} { this.{FIELD_NAME} = v; }
{IS_ENUM}   {OVERRIDES}
{IS_ENUM}   public void set{METHOD_NAME} (String v) {THROWS} { this.{FIELD_NAME} = {FIELD_TYPE}.getByApiValue(v); }{SETTER_END}

   @Override
   public java.util.Map<String,String> doLogging() {
      java.util.Map<String, String> ret = new java.util.HashMap<>();
{TO_STRING_START}      ret = de.mss.utils.logging.LoggingUtil.addLogging("{PRINT_NAME}", this.{FIELD_NAME}, ret);{TO_STRING_END}
{HAS_BASECLASS}      ret.putAll(super.doLogging());
      return ret;
   }

   @Override
   public String toString() {
      return de.mss.utils.logging.LoggingUtil.getLogString(doLogging());
   }
   
   
   @Override
   public void checkRequiredFields() throws de.mss.utils.exception.MssException {
{HAS_BASECLASS}      super.checkRequiredFields();
{REQUIRED_START}{CHECK_REQUIRED_START}
      {CHECK}{CHECK_REQUIRED_END}{REQUIRED_END}
   }
{PRINT_METHODS_START}
{METHOD}{PRINT_METHODS_END}
{SPECIAL_METHODS_START}
   {METHOD}{SPECIAL_METHODS_END}
}
